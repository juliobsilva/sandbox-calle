name: tag creation


on:
    pull_request:
        branches: main
        types: closed

jobs:
    tagcreation:
      runs-on: ubuntu-latest
      outputs:
        get_latest_tag: ${{ steps.get_latest_tag.outputs.latest_tag }}
        build_number: ${{ steps.calc_build_number.outputs.build_number }}

      steps:

      - uses: actions/checkout@v4 

      - name: Get latest tag
        id: get_latest_tag
        run: |
            git add ${{ GITHUB.WORKSPACE }}/apimartifacts/*
            git checkout main
            git fetch --tags
            LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "Latest tag: $LATEST_TAG"
            echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
  
      - name: Calculate next build number
        id: calc_build_number
        run: |
            if [[ "${{ steps.get_latest_tag.outputs.latest_tag }}" =~ ^RTS[0-9]+BN([0-9]+)$ ]]; then
                BUILD_NUMBER=$((BASH_REMATCH[1]+1))
            else
            BUILD_NUMBER=1
            fi
            echo "Next build number: $BUILD_NUMBER"
            echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT

      - name: Get the timestamp
        id: timestamp
        run: |
            TIMESTAMP=$(date +'%Y%m%d%H%M%S')
            echo "Timestamp: $TIMESTAMP"
            echo "datetemp=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
         TIMESTAMP: ${{ steps.timestamp.outputs.datetemp }}
         BUILD_NUMBER: ${{ steps.calc_build_number.outputs.build_number }}
        run: |
            TAG="RTS${{env.TIMESTAMP}}BN${{env.BUILD_NUMBER}}"
            echo "Creating tag $TAG"
            git tag -a "$TAG" -m "Tag generated by GitHub Actions"
            git push origin "$TAG"


